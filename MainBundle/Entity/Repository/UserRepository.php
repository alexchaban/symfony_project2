<?php

namespace MainBundle\Entity\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
	public function getActive(\MainBundle\Entity\User $user)
	{
		$userId = $user->getId();
		$delay = new \DateTime();
		$delay->setTimestamp(strtotime('2 minutes ago'));

		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder();
		$qb->select(
			array(
				'u.id',
				'u.firstname',
				'u.lastname',
				'u.username'
			)
		)
		->from('MainBundle:User', 'u')
		->leftJoin('MainBundle:UserFriend', 'uf', 'WITH', 'u.id = uf.friend')
		->where('u.lastActivity > :delay')
		->andWhere($qb->expr()->eq('uf.user', ':userId'))
		->setParameter('delay', $delay)
		->setParameter('userId', $userId);

		//return $qb->getQuery()->getResult();
		return $qb->getQuery()->getScalarResult();
	}

	public function getUserFriends(\MainBundle\Entity\User $user, $phrase)
	{
		$userId = $user->getId();

		$em = $this->getEntityManager();
		$qb = $em->createQueryBuilder();

		$qb->select(
			array(
				'u.id as id',
				"CONCAT(u.firstname, ' ', u.lastname) as fullname"
			)
		)
		->from('MainBundle:UserFriend', 'uf')
		->leftJoin('MainBundle:User', 'u', 'WITH', 'uf.user = u.id')
		->where('uf.friend = :userId');
		if (!empty($phrase))
		{
			$qb->andWhere(
				$qb->expr()->orX(
					$qb->expr()->like('u.firstname', ':phrase'),
					$qb->expr()->like('u.lastname', ':phrase')
				)
			)
			->setParameter('phrase', '%' . $phrase . '%');
		}
		$qb->groupBy('u.id')
		->setParameter(':userId', $userId);
		$query = $qb->getQuery();
		$result = $query->getScalarResult();

		return $result;
	}

}
